plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id("org.jetbrains.kotlin.plugin.serialization") version "1.3.71"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.11"

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.0")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-protobuf:1.0.0")
}

task generateMySources(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task addMySourcesToAar(type: Jar) {
    archiveName "sdk-debug-${android.defaultConfig.versionName}.aar"
    destinationDir file("build")
    from zipTree("build/outputs/aar/sdk-debug.aar")
    from fileTree("build").include("libs/sdk-sources.jar")
}

task buildEncryptedSdk(type: Jar) {
    archiveName "sdk-release-${android.defaultConfig.versionName}.aar"
    destinationDir file("build")
    from zipTree("build/outputs/aar/sdk-release.aar")
}

afterEvaluate { project ->
    project.tasks.preBuild.dependsOn generateMySources
    project.addMySourcesToAar.dependsOn assembleDebug
    project.buildEncryptedSdk.dependsOn assembleRelease
}

artifacts {
    archives generateMySources
}
